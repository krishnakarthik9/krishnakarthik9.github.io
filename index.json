[{"authors":["admin"],"categories":null,"content":"Krishna Karthik is a passionate technologist who holds a bachelors degree in Computer Science from the Indian Institute of Technology (IIT), Kanpur. He is currently working as a Software Engineer for VMware, India, where he develops SaaS applicaitons and contributes to open source projects. Karthik is one of the major contributors and maintainer for open source project Purser.\n","date":-62135596800,"expirydate":-62135596800,"kind":"taxonomy","lang":"en","lastmod":-62135596800,"objectID":"2525497d367e79493fd32b198b28f040","permalink":"https://krishnakarthik.in/authors/admin/","publishdate":"0001-01-01T00:00:00Z","relpermalink":"/authors/admin/","section":"authors","summary":"Krishna Karthik is a passionate technologist who holds a bachelors degree in Computer Science from the Indian Institute of Technology (IIT), Kanpur. He is currently working as a Software Engineer for VMware, India, where he develops SaaS applicaitons and contributes to open source projects. Karthik is one of the major contributors and maintainer for open source project Purser.","tags":null,"title":"Krishna Karthik Reddy Jonnala","type":"authors"},{"authors":["Trilok Geer"],"categories":["Security"],"content":" Why SPIFFE for edge computing? Edge computing framework capabilities should be able to cloud-native design patterns and practices such as container orchestration, microservices, serverless computation which has led to increasing heterogenous deployment environments. Conventional practices for securing heterogenous deployments add complexity overhead to enforcing policies, prevention and detection of threats. Due to the increase in complexity, there is more scope of error in manageability and also, constraints the scalability of the applications across multiple production environments. In such cases, a common identity framework for workloads becomes necessary to avoid the pit-falls of conventional security policies (such as managing network policies that are based on rules for traffic between particular ip addresses) which affect implementation of distributed patterns.\nThis enables to build a security model which is application-oriented rather than infrastructure-oriented.\nWhat is SPIFFE and SPIRE? The SPIFFE standard provides a specification for a framework capable of bootstrapping and issuing identity to services across heterogeneous environments and organizational boundaries.\nSPIFFE specification standardizes the process of assigning identities to workloads , verifying and validation of workload identities and workload API to retrieve the identities.\nhttps://github.com/spiffe/spiffe\nSPIFFE identities are encompassed in a SVID (SPIFFE Verifiable Identity Document). SVID specification provides the requirement for properties that must be supported when implementing SVID. Following link provides more information on SVID based on X509 certificate.\nhttps://github.com/spiffe/spiffe/blob/master/standards/X509-SVID.md\nSPIRE is a toolchain implementation for SPIFFE specification that enables establishing trust between workloads (using mTLS or JWT) across different deployment environments,issue SPIFFE IDs and workload API to retrieve workload SVIDs.\nHow does SPIRE work? Following information is extracted from Scytale presentations which gives informative and simplistic view on how SPIRE works.\nWhat are the few desired security requirements for Kubeedge? Security is a paramount requirement for edge computing architecture as security breaches can make a complete organization to come to a halt (IIot) , data breach can lead to privacy issues and also control of the complete edge computing infrastructure. Few of the security requirements for deployment for kubeedge framework and edge application, but not limited to, are\n An identifiable edge node and workloads executing on the edge node.\n A method to verify the authenticity of the node and workloads executing on the node.\n Automated rotation of security credentials.\n Limit the affect of SPOF (in case of security-related events).\n Auditable security information about node and workloads in the environment.\n Limit access of user workloads to framework components and cloud.\n Secure device provisioning.\n Device identity management and access control.\n  How SPIRE helps Kubeedge?  Node attestation: Only verifiable edge nodes can join the edge clusters. Every node is issued an identity on verification. In case of failed node attestations, no identity documents can be issued for services running on the node.\n Workload attestation: Only verifiable workload can run on edge nodes. In case of failed workload attestations, there are no identities issues for the workloads. All communications are blocked from unverified workloads.\n Certificate rotation: Short-lived certificates are generated and rotation policies can be configured for every service communication. There is no need for custom agents and reliance on specific orchestrators for certificate rotation configuration and management.\n Automated non-root CA certificate heirarchical deployments: Edge spire servers can be configured to not share any root CA chain for downstream nodes and workloads.\n  Example Demo In the present example PoC, there is no solution implemented for secure device provisioning and identity management. It will be added in the forthcoming versions. An example demo using SPIRE for secure deployment of edge node and sample applications can be found at\nhttps://github.com/kubeedge/examples/tree/master/security-demo\n","date":1555353000,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1555353000,"objectID":"fe859c6266641600992fd6a0d6f11947","permalink":"https://krishnakarthik.in/post/post1/","publishdate":"2019-04-16T00:00:00+05:30","relpermalink":"/post/post1/","section":"post","summary":"Secure kubeedge workloads using SPIFFE/SPIRE","tags":["KubeEdge","kubeedge","edge computing","kubernetes edge computing","K8S edge orchestration","edge computing platform","security"],"title":"Secure kubeedge using SPIFFE/SPIRE","type":"post"},{"authors":["Li \"Cindy\" Xing"],"categories":null,"content":" From the talk Deep Dive: Kubernetes IoT Edge WG What are the workloads that are unique or common to running Kubernetes on the edge? How do they take advantage of existing Kubernetes features, or require refinements and new capabilities? We’ll dive into the use cases, functional requirements and unique challenges of deploying IoT and Edge workloads on Kubernetes and discuss the technical challenges involved today. With the goal of addressing the challenges, we’ll have a panel discussion to share views and ideas on potential platform improvements. The session will close with audience participation and Q\u0026amp;A.\nSpeakers Cindy Xing (Senior Cloud Software Architect, Huawei) Cindy Xing currently works at Huawei as a Senior Cloud Software Architect.She focuses on building Huawei Platform as a Service infrastructure for Huawei public cloud.Her interest area includes Kubernetes, container, Windows and Edge technologies.\nDejan Bosanac (Software Engineer, Red Hat) I\u0026rsquo;m an engineer at Red Hat with broad expertise in messaging and integration technologies. I’ve been an active member of open source communities for many years and a contributor to various projects.\nPreston Holmes (Head of IoT Solutions, Google Cloud) Preston Holmes is Head of IoT solutions for Google Cloud Platform. A recovering academic, Preston moved from fish brains to technology 15 years ago, becoming deeply involved in the world of Python open source web frameworks.\nSteve Wong (Software Engineer, Cloud Native Business Unit, VMware) Developer interested in containers, storage, virtualization, IoT, machine learning, streaming data analytics, and cloud native application technology. Active in Kubernetes storage community since 2015. Chair of Kubernetes VMware SIG.\n","date":1544691900,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1544691900,"objectID":"d00343e553d0bd06ca6f08b7026091bd","permalink":"https://krishnakarthik.in/talk/talk1/","publishdate":"2019-03-15T00:00:00+05:30","relpermalink":"/talk/talk1/","section":"talk","summary":"Introducing KubeEdge, a Kubernetes native edge computing framework.","tags":[],"title":"Introducing KubeEdge","type":"talk"}]